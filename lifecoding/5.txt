<Header></Header>
<Nav></Nav>
<Article></Article>

<img src="./image.jpg" width="100" height="100"/>

이렇게 만든 컴포넌트들과 img라는 html태그가 있다.
그런데 이 html태그에는 컴포넌트들과는 다른 요소를 갖고 있다. 
=> src -> src가 뭐냐에 따라서 이미지가 달라진다.
   width -> width가 뭐냐에 따라서 이미지 크기가 달라진다.
   height -> height가 뭐냐에 따라서 이미지 높이가 달라진다.

즉, src, width, height와 같은 속성들 덕분에 이미지태그는 입력 값을 가질 수 있게 된다. 

그럼 컴포넌트들도 저렇게 속성을 가질 수 있다면 얼마나 좋을까?
< 리액트는 속성을 PROP이라고 부른다 >
< 5. props > 에서 어떻게 내가 만든 컴포넌트에 prop을 장착할 수 있는가를 살펴볼거다

-------------------------------------------------------

function Header(props) {
   =>  Header에 첫번째 파라미터로 props라고 이름을 붙였다(아무거나 적어도 되지만 가장 대중적인걸로)

  console.log("props", props);
    => props ▶︎ Objec =>  props에는 객체가 들어오는데 이 객체에는 title이 React다 라고 되어있다.(title: "React")
  return (
    <header>
      <h1>
        <a href="/">WEB</a>
      </h1>
    </header>
  );
}

function App() {
  return (
    <div>
      <Header title="React"></Header>
      <Nav></Nav>
      <Article></Article>
    </div>
  );
}


그렇다면 밑에 했던 react라는 텍스트를 얻어내려면 어떻게 해야할까?
👇🏻 props에 title이라고 하면된다 => props.title


function Header(props) {
  console.log("props", props, props.title);
    => props {title: 'React'} React 
     => React가 출력된다.

  return (
    <header>
      <h1>
        <a href="/">WEB</a>
      </h1>
    </header>
  );
}


👇🏻 그렇다면 props.title을 내용으로 출력하고 싶다면
return값에 들어가는 구문에 {} 중괄호를 해주면 된다.


function Header(props) {
  console.log("props", props, props.title);
  return (
    <header>
      <h1>
        <a href="/">{props.title}</a>
      </h1>
    </header>
  );
}

=> {} 중괄호와 중괄호 사이에 있는 정보는 일반적인 문자열이 아니라 표현식으로 취급되기 때문에 저기에 있는 내용이 해석되서 그것이 이렇게 반영되는 것이다.
